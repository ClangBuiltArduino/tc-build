name: LLVMgold Build Pipeline

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  ORG_NAME: clangbuiltarduino
  IMAGE_NAME: llvm-linux

jobs:
  deps-glibc:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Build deps stage for glibc
        uses: ./.github/actions/stage-builder
        with:
          target: deps-glibc-local
          host: linux
          file: dockerfiles/llvm/LLVMgold-linux-amd64.Dockerfile
          push: true
          tags: gold-deps-glibc:${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

  deps-musl:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Build deps stage for musl
        uses: ./.github/actions/stage-builder
        with:
          target: deps-musl-local
          host: linux
          file: dockerfiles/llvm/LLVMgold-linux-amd64.Dockerfile
          push: true
          tags: gold-deps-musl:${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

  stage1-glibc:
    needs: deps-glibc
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
          
      - name: Build stage1 for glibc
        uses: ./.github/actions/stage-builder
        with:
          target: stage1-glibc-local
          host: linux
          file: dockerfiles/llvm/LLVMgold-linux-amd64.Dockerfile
          push: true
          tags: gold-stage1-glibc:${{ github.sha }}
          build-args: |
            DEPS_IMAGE_GLIBC=ghcr.io/clangbuiltarduino/llvm-linux-gold-deps-glibc:${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

  stage1-musl:
    needs: deps-musl
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
          
      - name: Build stage1 for musl
        uses: ./.github/actions/stage-builder
        with:
          target: stage1-musl-local
          host: linux
          file: dockerfiles/llvm/LLVMgold-linux-amd64.Dockerfile
          push: true
          tags: gold-stage1-musl:${{ github.sha }}
          build-args: |
            DEPS_IMAGE_MUSL=ghcr.io/clangbuiltarduino/llvm-linux-gold-deps-musl:${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

  llvmgold-glibc:
    needs: stage1-glibc
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
          
      - name: Build LLVMgold glibc
        uses: ./.github/actions/stage-builder
        with:
          target: llvmgold-glibc-local
          host: linux
          file: dockerfiles/llvm/LLVMgold-linux-amd64.Dockerfile
          push: true
          tags: gold-final-glibc:${{ github.sha }}
          build-args: |
            STAGE1_IMAGE_GLIBC=ghcr.io/clangbuiltarduino/llvm-linux-gold-stage1-glibc:${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

  llvmgold-musl:
    needs: stage1-musl
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
          
      - name: Build LLVMgold musl
        uses: ./.github/actions/stage-builder
        with:
          target: llvmgold-musl-local
          host: linux
          file: dockerfiles/llvm/LLVMgold-linux-amd64.Dockerfile
          push: true
          tags: gold-final-musl:${{ github.sha }}
          build-args: |
            STAGE1_IMAGE_MUSL=ghcr.io/clangbuiltarduino/llvm-linux-gold-stage1-musl:${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}

  packaging:
    needs: [llvmgold-glibc, llvmgold-musl]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
          
      - name: Pack and push archives
        uses: ./.github/actions/stage-builder
        with:
          target: packing
          host: linux
          file: dockerfiles/llvm/LLVMgold-linux-amd64.Dockerfile
          push: false
          tags: packing:${{ github.sha }}
          build-args: |
            FINAL_IMAGE_GLIBC=ghcr.io/clangbuiltarduino/llvm-linux-gold-final-glibc:${{ github.sha }}
            FINAL_IMAGE_MUSL=ghcr.io/clangbuiltarduino/llvm-linux-gold-final-musl:${{ github.sha }}
          secrets: |
            "GH_TOKEN=${{ secrets.GITHUB_TOKEN }}"
          token: ${{ secrets.GITHUB_TOKEN }}
